/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  IntegrationTest,
  IntegrationTestInterface,
} from "../IntegrationTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "arrayToGoAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "arrayName",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getTokenIds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200097e3803806200097e8339818101604052810190620000379190620003ec565b6200006b7fd1ef5ffa15d4508c9d66d22cb15a9eb102dae16deda5e7a8ff2e7d9393d5b11960001b6200017660201b60201c565b6200009f7f4afa4a799d350718c7758890ea765839d7ca4dd288dcd8be39984a7a3d7cdbe960001b6200017660201b60201c565b620000d37f6c454e0e9283b638672abd5898bea320f6db028099ed5676ef39b8cecdeebcd560001b6200017660201b60201c565b8173ffffffffffffffffffffffffffffffffffffffff1662693599826040518263ffffffff1660e01b81526004016200010d9190620004af565b600060405180830381865afa1580156200012b573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190620001569190620005e9565b600090805190602001906200016d92919062000179565b5050506200063a565b50565b828054828255906000526020600020908101928215620001b8579160200282015b82811115620001b75782518255916020019190600101906200019a565b5b509050620001c79190620001cb565b5090565b5b80821115620001e6576000816000905550600101620001cc565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200022b82620001fe565b9050919050565b6200023d816200021e565b81146200024957600080fd5b50565b6000815190506200025d8162000232565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620002b8826200026d565b810181811067ffffffffffffffff82111715620002da57620002d96200027e565b5b80604052505050565b6000620002ef620001ea565b9050620002fd8282620002ad565b919050565b600067ffffffffffffffff82111562000320576200031f6200027e565b5b6200032b826200026d565b9050602081019050919050565b60005b83811015620003585780820151818401526020810190506200033b565b8381111562000368576000848401525b50505050565b6000620003856200037f8462000302565b620002e3565b905082815260208101848484011115620003a457620003a362000268565b5b620003b184828562000338565b509392505050565b600082601f830112620003d157620003d062000263565b5b8151620003e38482602086016200036e565b91505092915050565b60008060408385031215620004065762000405620001f4565b5b600062000416858286016200024c565b925050602083015167ffffffffffffffff8111156200043a5762000439620001f9565b5b6200044885828601620003b9565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60006200047b8262000452565b6200048781856200045d565b93506200049981856020860162000338565b620004a4816200026d565b840191505092915050565b60006020820190508181036000830152620004cb81846200046e565b905092915050565b600067ffffffffffffffff821115620004f157620004f06200027e565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b6200051c8162000507565b81146200052857600080fd5b50565b6000815190506200053c8162000511565b92915050565b6000620005596200055384620004d3565b620002e3565b905080838252602082019050602084028301858111156200057f576200057e62000502565b5b835b81811015620005ac57806200059788826200052b565b84526020840193505060208101905062000581565b5050509392505050565b600082601f830112620005ce57620005cd62000263565b5b8151620005e084826020860162000542565b91505092915050565b600060208284031215620006025762000601620001f4565b5b600082015167ffffffffffffffff811115620006235762000622620001f9565b5b6200063184828501620005b6565b91505092915050565b610334806200064a6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806367f718a91461003b578063d58778d614610059575b600080fd5b610043610089565b6040516100509190610254565b60405180910390f35b610073600480360381019061006e91906102a7565b610165565b60405161008091906102e3565b60405180910390f35b60606100b77fdab6eff47c9a42c17c3d4a7076a1afbcfb0b50b0e39003929974ef75f014140c60001b610189565b6100e37fbccc2680881d1b1af84253bf2d2cb58c0bd833d088ba9a77488f880bd2221f8060001b610189565b61010f7ff81a3fbfce46fe9d6fac0a33334e35416103917fe1134b158eea607cf24afec060001b610189565b600080548060200260200160405190810160405280929190818152602001828054801561015b57602002820191906000526020600020905b815481526020019060010190808311610147575b5050505050905090565b6000818154811061017557600080fd5b906000526020600020016000915090505481565b50565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b6101cb816101b8565b82525050565b60006101dd83836101c2565b60208301905092915050565b6000602082019050919050565b60006102018261018c565b61020b8185610197565b9350610216836101a8565b8060005b8381101561024757815161022e88826101d1565b9750610239836101e9565b92505060018101905061021a565b5085935050505092915050565b6000602082019050818103600083015261026e81846101f6565b905092915050565b600080fd5b610284816101b8565b811461028f57600080fd5b50565b6000813590506102a18161027b565b92915050565b6000602082840312156102bd576102bc610276565b5b60006102cb84828501610292565b91505092915050565b6102dd816101b8565b82525050565b60006020820190506102f860008301846102d4565b9291505056fea2646970667358221220dacd667ebd4ac53a9ad646d3c361052ee253579dc76f20fe7437d3c74dd7dd8264736f6c634300080c0033";

type IntegrationTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IntegrationTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IntegrationTest__factory extends ContractFactory {
  constructor(...args: IntegrationTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "IntegrationTest";
  }

  deploy(
    arrayToGoAddress: string,
    arrayName: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<IntegrationTest> {
    return super.deploy(
      arrayToGoAddress,
      arrayName,
      overrides || {}
    ) as Promise<IntegrationTest>;
  }
  getDeployTransaction(
    arrayToGoAddress: string,
    arrayName: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      arrayToGoAddress,
      arrayName,
      overrides || {}
    );
  }
  attach(address: string): IntegrationTest {
    return super.attach(address) as IntegrationTest;
  }
  connect(signer: Signer): IntegrationTest__factory {
    return super.connect(signer) as IntegrationTest__factory;
  }
  static readonly contractName: "IntegrationTest";
  public readonly contractName: "IntegrationTest";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IntegrationTestInterface {
    return new utils.Interface(_abi) as IntegrationTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IntegrationTest {
    return new Contract(address, _abi, signerOrProvider) as IntegrationTest;
  }
}

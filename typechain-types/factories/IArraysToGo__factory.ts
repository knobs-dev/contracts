/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { IArraysToGo, IArraysToGoInterface } from "../IArraysToGo";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "arrayName",
        type: "string",
      },
      {
        internalType: "uint256[]",
        name: "data",
        type: "uint256[]",
      },
    ],
    name: "fillArrayByName",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "arrayName",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "numberOfElements",
        type: "uint256",
      },
    ],
    name: "fillArrayByNameProgressively",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "arrayName",
        type: "string",
      },
    ],
    name: "getArrayByName",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "arrayName",
        type: "string",
      },
    ],
    name: "getArrayInfo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "arrayName",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "arrayName",
        type: "string",
      },
    ],
    name: "safeGetArrayByName",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class IArraysToGo__factory {
  static readonly abi = _abi;
  static createInterface(): IArraysToGoInterface {
    return new utils.Interface(_abi) as IArraysToGoInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IArraysToGo {
    return new Contract(address, _abi, signerOrProvider) as IArraysToGo;
  }
}

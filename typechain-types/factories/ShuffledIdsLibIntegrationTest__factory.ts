/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ShuffledIdsLibIntegrationTest,
  ShuffledIdsLibIntegrationTestInterface,
} from "../ShuffledIdsLibIntegrationTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "s1min",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "s1max",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "s2min",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "s2max",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mint1",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mint2",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shuffler1",
    outputs: [
      {
        internalType: "uint256",
        name: "remaining",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "initialized",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "shuffler2",
    outputs: [
      {
        internalType: "uint256",
        name: "remaining",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "initialized",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000dc438038062000dc483398181016040528101906200003791906200016a565b62000054848460016200007b60201b62000150179092919060201c565b62000071828260066200007b60201b62000150179092919060201c565b5050505062000326565b80821080156200008b5750600082115b620000cd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000c4906200023d565b60405180910390fd5b60018282620000dd91906200028e565b620000e99190620002c9565b83600001819055506001826200010091906200028e565b836001018190555060018360040160006101000a81548160ff021916908315150217905550505050565b600080fd5b6000819050919050565b62000144816200012f565b81146200015057600080fd5b50565b600081519050620001648162000139565b92915050565b600080600080608085870312156200018757620001866200012a565b5b6000620001978782880162000153565b9450506020620001aa8782880162000153565b9350506040620001bd8782880162000153565b9250506060620001d08782880162000153565b91505092959194509250565b600082825260208201905092915050565b7f696e76616c6964206c6f77657220626f756e6400000000000000000000000000600082015250565b600062000225601383620001dc565b91506200023282620001ed565b602082019050919050565b60006020820190508181036000830152620002588162000216565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200029b826200012f565b9150620002a8836200012f565b925082821015620002be57620002bd6200025f565b5b828203905092915050565b6000620002d6826200012f565b9150620002e3836200012f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156200031b576200031a6200025f565b5b828201905092915050565b610a8e80620003366000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063044b4b5d1461005c5780633213b33b1461006657806385d1ef6314610087578063912db85714610091578063af640d0f146100b2575b600080fd5b6100646100d0565b005b61006e6100e2565b60405161007e94939291906105c1565b60405180910390f35b61008f61010d565b005b61009961011f565b6040516100a994939291906105c1565b60405180910390f35b6100ba61014a565b6040516100c79190610606565b60405180910390f35b6100da60016101f5565b600081905550565b60018060000154908060010154908060020154908060040160009054906101000a900460ff16905084565b61011760066101f5565b600081905550565b60068060000154908060010154908060020154908060040160009054906101000a900460ff16905084565b60005481565b808210801561015f5750600082115b61019e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101959061067e565b60405180910390fd5b600182826101ac91906106cd565b6101b69190610701565b83600001819055506001826101cb91906106cd565b836001018190555060018360040160006101000a81548160ff021916908315150217905550505050565b600081600081600001541161023f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610236906107a3565b60405180910390fd5b82600115158160040160009054906101000a900460ff16151514610298576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028f9061080f565b60405180910390fd5b6000846000015442336001436102ae91906106cd565b4088600201546040516020016102c794939291906108f5565b6040516020818303038152906040528051906020012060001c6102ea9190610972565b9050846002016000815480929190610301906109a3565b9190505550610310858261031a565b9350505050919050565b600082600115158160040160009054906101000a900460ff16151514610375576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036c9061080f565b60405180910390fd5b600084600301600085815260200190815260200160002054905060008114156103c6576103a285856103f7565b60018560010154856103b49190610701565b6103be9190610701565b9250506103f0565b6103d085856103f7565b60018560010154826103e29190610701565b6103ec9190610701565b9250505b5092915050565b81600115158160040160009054906101000a900460ff16151514610450576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104479061080f565b60405180910390fd5b610459836104d7565b60008360030160008560000154815260200190815260200160002054141561049e578260000154836003016000848152602001908152602001600020819055506104d2565b8260030160008460000154815260200190815260200160002054836003016000848152602001908152602001600020819055505b505050565b80600115158160040160009054906101000a900460ff16151514610530576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105279061080f565b60405180910390fd5b6000826000015490506000811161057c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057390610a38565b60405180910390fd5b600181038360000181905550505050565b6000819050919050565b6105a08161058d565b82525050565b60008115159050919050565b6105bb816105a6565b82525050565b60006080820190506105d66000830187610597565b6105e36020830186610597565b6105f06040830185610597565b6105fd60608301846105b2565b95945050505050565b600060208201905061061b6000830184610597565b92915050565b600082825260208201905092915050565b7f696e76616c6964206c6f77657220626f756e6400000000000000000000000000600082015250565b6000610668601383610621565b915061067382610632565b602082019050919050565b600060208201905081810360008301526106978161065b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006106d88261058d565b91506106e38361058d565b9250828210156106f6576106f561069e565b5b828203905092915050565b600061070c8261058d565b91506107178361058d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561074c5761074b61069e565b5b828201905092915050565b7f4e6f206d6f726520696473206c65667400000000000000000000000000000000600082015250565b600061078d601083610621565b915061079882610757565b602082019050919050565b600060208201905081810360008301526107bc81610780565b9050919050565b7f53687566666c6572206e6f7420696e697469616c697a65642079657400000000600082015250565b60006107f9601c83610621565b9150610804826107c3565b602082019050919050565b60006020820190508181036000830152610828816107ec565b9050919050565b6000819050919050565b61084a6108458261058d565b61082f565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061087b82610850565b9050919050565b60008160601b9050919050565b600061089a82610882565b9050919050565b60006108ac8261088f565b9050919050565b6108c46108bf82610870565b6108a1565b82525050565b6000819050919050565b6000819050919050565b6108ef6108ea826108ca565b6108d4565b82525050565b60006109018287610839565b60208201915061091182866108b3565b60148201915061092182856108de565b6020820191506109318284610839565b60208201915081905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061097d8261058d565b91506109888361058d565b92508261099857610997610943565b5b828206905092915050565b60006109ae8261058d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156109e1576109e061069e565b5b600182019050919050565b7f436f756e7465723a2064656372656d656e74206f766572666c6f770000000000600082015250565b6000610a22601b83610621565b9150610a2d826109ec565b602082019050919050565b60006020820190508181036000830152610a5181610a15565b905091905056fea26469706673582212202c00969f7ab7c7996c6f56c7663090f7a9a49f17aafe254f83a95af08e4b1b2264736f6c634300080c0033";

type ShuffledIdsLibIntegrationTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShuffledIdsLibIntegrationTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ShuffledIdsLibIntegrationTest__factory extends ContractFactory {
  constructor(...args: ShuffledIdsLibIntegrationTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ShuffledIdsLibIntegrationTest";
  }

  deploy(
    s1min: BigNumberish,
    s1max: BigNumberish,
    s2min: BigNumberish,
    s2max: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ShuffledIdsLibIntegrationTest> {
    return super.deploy(
      s1min,
      s1max,
      s2min,
      s2max,
      overrides || {}
    ) as Promise<ShuffledIdsLibIntegrationTest>;
  }
  getDeployTransaction(
    s1min: BigNumberish,
    s1max: BigNumberish,
    s2min: BigNumberish,
    s2max: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      s1min,
      s1max,
      s2min,
      s2max,
      overrides || {}
    );
  }
  attach(address: string): ShuffledIdsLibIntegrationTest {
    return super.attach(address) as ShuffledIdsLibIntegrationTest;
  }
  connect(signer: Signer): ShuffledIdsLibIntegrationTest__factory {
    return super.connect(signer) as ShuffledIdsLibIntegrationTest__factory;
  }
  static readonly contractName: "ShuffledIdsLibIntegrationTest";
  public readonly contractName: "ShuffledIdsLibIntegrationTest";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShuffledIdsLibIntegrationTestInterface {
    return new utils.Interface(_abi) as ShuffledIdsLibIntegrationTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ShuffledIdsLibIntegrationTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ShuffledIdsLibIntegrationTest;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ArraysToGo, ArraysToGoInterface } from "../ArraysToGo";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "ArrayCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "ArrayInitialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "arrayName",
        type: "string",
      },
      {
        internalType: "uint256[]",
        name: "data",
        type: "uint256[]",
      },
    ],
    name: "fillArrayByName",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "arrayName",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "numberOfElements",
        type: "uint256",
      },
    ],
    name: "fillArrayByNameProgressively",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "arrayName",
        type: "string",
      },
    ],
    name: "getArrayByName",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "arrayName",
        type: "string",
      },
    ],
    name: "getArrayInfo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "arrayName",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "arrayName",
        type: "string",
      },
    ],
    name: "safeGetArrayByName",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "";

type ArraysToGoConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArraysToGoConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArraysToGo__factory extends ContractFactory {
  constructor(...args: ArraysToGoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ArraysToGo";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ArraysToGo> {
    return super.deploy(overrides || {}) as Promise<ArraysToGo>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ArraysToGo {
    return super.attach(address) as ArraysToGo;
  }
  connect(signer: Signer): ArraysToGo__factory {
    return super.connect(signer) as ArraysToGo__factory;
  }
  static readonly contractName: "ArraysToGo";
  public readonly contractName: "ArraysToGo";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArraysToGoInterface {
    return new utils.Interface(_abi) as ArraysToGoInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ArraysToGo {
    return new Contract(address, _abi, signerOrProvider) as ArraysToGo;
  }
}

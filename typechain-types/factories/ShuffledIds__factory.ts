/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ShuffledIds, ShuffledIdsInterface } from "../ShuffledIds";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "arrayToGoAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "arrayName",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610613380380610613833981810160405281019061003291906103ac565b6100647fb5225f61bc9e70dab76205355547a321e052966ca49f8fb81f6413339d49ee0560001b61016360201b60201c565b6100967f6490bc743a80c422ceff405aec1b1d165c3abcc6824a964dd58f9c32eeca4cd260001b61016360201b60201c565b6100c87f874223f45cdefeada1779174f3f825f972e2f9c127d7bdcc3db03e619bcfa2e860001b61016360201b60201c565b8173ffffffffffffffffffffffffffffffffffffffff1662693599826040518263ffffffff1660e01b8152600401610100919061045d565b600060405180830381865afa15801561011d573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610146919061057d565b6000908051906020019061015b929190610166565b5050506105c6565b50565b8280548282559060005260206000209081019282156101a2579160200282015b828111156101a1578251825591602001919060010190610186565b5b5090506101af91906101b3565b5090565b5b808211156101cc5760008160009055506001016101b4565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061020f826101e4565b9050919050565b61021f81610204565b811461022a57600080fd5b50565b60008151905061023c81610216565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6102958261024c565b810181811067ffffffffffffffff821117156102b4576102b361025d565b5b80604052505050565b60006102c76101d0565b90506102d3828261028c565b919050565b600067ffffffffffffffff8211156102f3576102f261025d565b5b6102fc8261024c565b9050602081019050919050565b60005b8381101561032757808201518184015260208101905061030c565b83811115610336576000848401525b50505050565b600061034f61034a846102d8565b6102bd565b90508281526020810184848401111561036b5761036a610247565b5b610376848285610309565b509392505050565b600082601f83011261039357610392610242565b5b81516103a384826020860161033c565b91505092915050565b600080604083850312156103c3576103c26101da565b5b60006103d18582860161022d565b925050602083015167ffffffffffffffff8111156103f2576103f16101df565b5b6103fe8582860161037e565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b600061042f82610408565b6104398185610413565b9350610449818560208601610309565b6104528161024c565b840191505092915050565b600060208201905081810360008301526104778184610424565b905092915050565b600067ffffffffffffffff82111561049a5761049961025d565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b6104c3816104b0565b81146104ce57600080fd5b50565b6000815190506104e0816104ba565b92915050565b60006104f96104f48461047f565b6102bd565b9050808382526020820190506020840283018581111561051c5761051b6104ab565b5b835b81811015610545578061053188826104d1565b84526020840193505060208101905061051e565b5050509392505050565b600082601f83011261056457610563610242565b5b81516105748482602086016104e6565b91505092915050565b600060208284031215610593576105926101da565b5b600082015167ffffffffffffffff8111156105b1576105b06101df565b5b6105bd8482850161054f565b91505092915050565b603f806105d46000396000f3fe6080604052600080fdfea2646970667358221220e9a027fb80a03a215dc5901fda2a37c836c471f5b1575487676ba41ca7d5124664736f6c634300080c0033";

type ShuffledIdsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShuffledIdsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ShuffledIds__factory extends ContractFactory {
  constructor(...args: ShuffledIdsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ShuffledIds";
  }

  deploy(
    arrayToGoAddress: string,
    arrayName: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ShuffledIds> {
    return super.deploy(
      arrayToGoAddress,
      arrayName,
      overrides || {}
    ) as Promise<ShuffledIds>;
  }
  getDeployTransaction(
    arrayToGoAddress: string,
    arrayName: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      arrayToGoAddress,
      arrayName,
      overrides || {}
    );
  }
  attach(address: string): ShuffledIds {
    return super.attach(address) as ShuffledIds;
  }
  connect(signer: Signer): ShuffledIds__factory {
    return super.connect(signer) as ShuffledIds__factory;
  }
  static readonly contractName: "ShuffledIds";
  public readonly contractName: "ShuffledIds";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShuffledIdsInterface {
    return new utils.Interface(_abi) as ShuffledIdsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ShuffledIds {
    return new Contract(address, _abi, signerOrProvider) as ShuffledIds;
  }
}
